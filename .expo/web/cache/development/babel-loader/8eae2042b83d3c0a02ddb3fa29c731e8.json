{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/Widgets/List.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport NativeBaseComponent from \"../Base/NativeBaseComponent\";\nimport computeProps from \"../../Utils/computeProps\";\nimport _ from 'lodash';\n\nvar ListNB = function (_NativeBaseComponent) {\n  _inherits(ListNB, _NativeBaseComponent);\n\n  var _super = _createSuper(ListNB);\n\n  function ListNB() {\n    _classCallCheck(this, ListNB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListNB, [{\n    key: \"getInitialStyle\",\n    value: function getInitialStyle() {\n      return {\n        list: {},\n        insetList: {\n          borderWidth: 1,\n          borderColor: this.getTheme().listBorderColor,\n          margin: 15,\n          borderBottomWidth: 0\n        }\n      };\n    }\n  }, {\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var defaultProps = {\n        style: this.props.inset ? this.getInitialStyle().insetList : this.getInitialStyle().list\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var childrenArray = React.Children.toArray(this.props.children);\n      var keyIndex = 0;\n      childrenArray = childrenArray.map(function (child) {\n        keyIndex++;\n        return React.cloneElement(child, _objectSpread(_objectSpread({}, child.props), {}, {\n          key: keyIndex\n        }));\n      });\n\n      var lastElement = _.last(childrenArray);\n\n      return _.concat(_.slice(childrenArray, 0, childrenArray.length - 1), lastElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.dataArray && this.props.renderRow) {\n        var ds = new ListView.DataSource({\n          rowHasChanged: function rowHasChanged(r1, r2) {\n            return r1 !== r2;\n          }\n        });\n        var dataSource = ds.cloneWithRows(this.props.dataArray);\n        return React.createElement(ListView, _extends({}, this.prepareRootProps(), {\n          enableEmptySections: true,\n          dataSource: dataSource,\n          renderRow: this.props.renderRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }));\n      } else {\n        return React.createElement(View, _extends({\n          ref: function ref(c) {\n            return _this._root = c;\n          }\n        }, this.prepareRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }), this.renderChildren());\n      }\n    }\n  }]);\n\n  return ListNB;\n}(NativeBaseComponent);\n\nexport { ListNB as default };","map":{"version":3,"sources":["/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/Widgets/List.js"],"names":["React","NativeBaseComponent","computeProps","_","ListNB","list","insetList","borderWidth","borderColor","getTheme","listBorderColor","margin","borderBottomWidth","defaultProps","style","props","inset","getInitialStyle","childrenArray","Children","toArray","children","keyIndex","map","child","cloneElement","key","lastElement","last","concat","slice","length","dataArray","renderRow","ds","ListView","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","prepareRootProps","c","_root","renderChildren"],"mappings":"AACA;;;;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,mBAAP;AACA,OAAOC,YAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,M;;;;;;;;;;;;;sCAQC;AACd,aAAO;AACHC,QAAAA,IAAI,EAAE,EADH;AAIHC,QAAAA,SAAS,EAAE;AACPC,UAAAA,WAAW,EAAE,CADN;AAEPC,UAAAA,WAAW,EAAE,KAAKC,QAAL,GAAgBC,eAFtB;AAGPC,UAAAA,MAAM,EAAE,EAHD;AAIPC,UAAAA,iBAAiB,EAAE;AAJZ;AAJR,OAAP;AAWH;;;uCAGkB;AAEf,UAAIC,YAAY,GAAG;AACfC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAX,GAAmB,KAAKC,eAAL,GAAuBX,SAA1C,GAAsD,KAAKW,eAAL,GAAuBZ;AADrE,OAAnB;AAIA,aAAOH,YAAY,CAAC,KAAKa,KAAN,EAAaF,YAAb,CAAnB;AACH;;;qCAEgB;AAEb,UAAIK,aAAa,GAAGlB,KAAK,CAACmB,QAAN,CAAeC,OAAf,CAAuB,KAAKL,KAAL,CAAWM,QAAlC,CAApB;AAEA,UAAIC,QAAQ,GAAG,CAAf;AAEAJ,MAAAA,aAAa,GAAGA,aAAa,CAACK,GAAd,CAAkB,UAACC,KAAD,EAAW;AACzCF,QAAAA,QAAQ;AACR,eAAOtB,KAAK,CAACyB,YAAN,CAAmBD,KAAnB,kCAA8BA,KAAK,CAACT,KAApC;AAA2CW,UAAAA,GAAG,EAAEJ;AAAhD,WAAP;AACH,OAHe,CAAhB;;AAKA,UAAIK,WAAW,GAAGxB,CAAC,CAACyB,IAAF,CAAOV,aAAP,CAAlB;;AAIA,aAAOf,CAAC,CAAC0B,MAAF,CAAS1B,CAAC,CAAC2B,KAAF,CAAQZ,aAAR,EAAuB,CAAvB,EAA0BA,aAAa,CAACa,MAAd,GAAuB,CAAjD,CAAT,EAA8DJ,WAA9D,CAAP;AACH;;;6BAEQ;AAAA;;AACL,UAAG,KAAKZ,KAAL,CAAWiB,SAAX,IAAwB,KAAKjB,KAAL,CAAWkB,SAAtC,EAAiD;AAC7C,YAAMC,EAAE,GAAG,IAAIC,QAAQ,CAACC,UAAb,CAAwB;AAACC,UAAAA,aAAa,EAAE,uBAACC,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,KAAKC,EAAnB;AAAA;AAAhB,SAAxB,CAAX;AACA,YAAIC,UAAU,GAAGN,EAAE,CAACO,aAAH,CAAiB,KAAK1B,KAAL,CAAWiB,SAA5B,CAAjB;AACA,eACI,oBAAC,QAAD,eAAc,KAAKU,gBAAL,EAAd;AACI,UAAA,mBAAmB,EAAE,IADzB;AAEI,UAAA,UAAU,EAAEF,UAFhB;AAGI,UAAA,SAAS,EAAE,KAAKzB,KAAL,CAAWkB,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,OATD,MAUK;AACD,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAE,aAAAU,CAAC;AAAA,mBAAI,KAAI,CAACC,KAAL,GAAaD,CAAjB;AAAA;AAAZ,WAAoC,KAAKD,gBAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACC,KAAKG,cAAL,EADD,CADJ;AAKH;AACJ;;;;EApE+B5C,mB;;SAAfG,M","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport {View, ListView} from 'react-native';\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\nimport computeProps from '../../Utils/computeProps';\nimport _ from 'lodash';\n\nexport default class ListNB extends NativeBaseComponent {\n\n    propTypes: {\n        style : React.PropTypes.object,\n        dataArray : React.PropTypes.array,\n        renderRow : React.PropTypes.func\n    }\n\n    getInitialStyle() {\n        return {\n            list: {\n\n            },\n            insetList: {\n                borderWidth: 1,\n                borderColor: this.getTheme().listBorderColor,\n                margin: 15,\n                borderBottomWidth: 0\n            }\n        }\n    }\n\n\n    prepareRootProps() {\n\n        var defaultProps = {\n            style: this.props.inset ? this.getInitialStyle().insetList : this.getInitialStyle().list\n        };\n\n        return computeProps(this.props, defaultProps);\n    }\n\n    renderChildren() {\n\n        var childrenArray = React.Children.toArray(this.props.children);\n\n        var keyIndex = 0;\n\n        childrenArray = childrenArray.map((child) => {\n            keyIndex++;\n            return React.cloneElement(child, {...child.props, key: keyIndex});\n        });\n\n        var lastElement = _.last(childrenArray);\n\n\n\n        return _.concat(_.slice(childrenArray, 0, childrenArray.length - 1), lastElement);\n    }\n\n    render() {\n        if(this.props.dataArray && this.props.renderRow) {\n            const ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2});\n            var dataSource = ds.cloneWithRows(this.props.dataArray);\n            return (\n                <ListView {...this.prepareRootProps()}\n                    enableEmptySections={true}\n                    dataSource={dataSource}\n                    renderRow={this.props.renderRow} />\n            );\n        }\n        else {\n            return(\n                <View ref={c => this._root = c} {...this.prepareRootProps()} >\n                {this.renderChildren()}\n                </View>\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}