{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/vendor/react-native-scrollable-tab-view/DefaultTabBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport NativeBaseComponent from \"../../Base/NativeBaseComponent\";\nimport Text from \"../../Widgets/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nvar deviceWidth = Dimensions.get('window').width;\n\nvar DefaultTabBar = function (_NativeBaseComponent) {\n  _inherits(DefaultTabBar, _NativeBaseComponent);\n\n  var _super = _createSuper(DefaultTabBar);\n\n  function DefaultTabBar() {\n    _classCallCheck(this, DefaultTabBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DefaultTabBar, [{\n    key: \"getInitialStyle\",\n    value: function getInitialStyle() {\n      return {\n        tab: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: this.getTheme().tabBgColor\n        },\n        tabs: {\n          height: 45,\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          borderWidth: 1,\n          borderTopWidth: 0,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderBottomColor: '#ccc'\n        }\n      };\n    }\n  }, {\n    key: \"renderTabOption\",\n    value: function renderTabOption(name, page) {\n      var _this = this;\n\n      var isTabActive = this.props.activeTab === page;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: this.getTheme().darkenHeader,\n        style: [this.getInitialStyle().tab],\n        key: name,\n        onPress: function onPress() {\n          return _this.props.goToPage(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: isTabActive ? this.getTheme().tabTextColor : this.getTheme().tabTextColor,\n          fontWeight: isTabActive ? 'bold' : 'normal',\n          fontSize: this.getTheme().tabFontSize\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, name)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var numberOfTabs = this.props.tabs.length;\n      var tabUnderlineStyle = {\n        position: 'absolute',\n        width: deviceWidth / numberOfTabs,\n        height: 4,\n        backgroundColor: this.getTheme().tabTextColor,\n        bottom: 0\n      };\n      var left = this.props.scrollValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, deviceWidth / numberOfTabs]\n      });\n      return React.createElement(View, {\n        style: this.getInitialStyle().tabs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, this.props.tabs.map(function (tab, i) {\n        return _this2.renderTabOption(tab, i);\n      }), React.createElement(Animated.View, {\n        style: [tabUnderlineStyle, {\n          left: left\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return DefaultTabBar;\n}(NativeBaseComponent);\n\nDefaultTabBar.propTypes = {\n  goToPage: React.PropTypes.func,\n  activeTab: React.PropTypes.number,\n  tabs: React.PropTypes.array\n};\nexport { DefaultTabBar as default };","map":{"version":3,"sources":["/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/vendor/react-native-scrollable-tab-view/DefaultTabBar.js"],"names":["React","NativeBaseComponent","Text","deviceWidth","Dimensions","get","width","DefaultTabBar","tab","flex","alignItems","justifyContent","backgroundColor","getTheme","tabBgColor","tabs","height","flexDirection","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomColor","name","page","isTabActive","props","activeTab","darkenHeader","getInitialStyle","goToPage","color","tabTextColor","fontWeight","fontSize","tabFontSize","numberOfTabs","length","tabUnderlineStyle","position","bottom","left","scrollValue","interpolate","inputRange","outputRange","map","i","renderTabOption","propTypes","PropTypes","func","number","array"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport Text from '../../Widgets/Text';\n\nimport {\n  Dimensions,\n  StyleSheet,\n  TouchableHighlight,\n  View,\n  Animated,\n} from 'react-native';\n\nvar deviceWidth = Dimensions.get('window').width;\n\nexport default class DefaultTabBar extends NativeBaseComponent {\n    getInitialStyle() {\n        return {\n            tab: {\n                flex: 1,\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: this.getTheme().tabBgColor\n            },\n            tabs: {\n                height: 45,\n                flexDirection: 'row',\n                justifyContent: 'space-around',\n                borderWidth: 1,\n                borderTopWidth: 0,\n                borderLeftWidth: 0,\n                borderRightWidth: 0,\n                borderBottomColor: '#ccc',\n            }\n        }\n    }\n    static propTypes = {\n        goToPage: React.PropTypes.func,\n        activeTab: React.PropTypes.number,\n        tabs: React.PropTypes.array\n    }\n\n  renderTabOption(name, page) {\n    var isTabActive = this.props.activeTab === page;\n\n    return (\n      <TouchableHighlight underlayColor={this.getTheme().darkenHeader} style={[this.getInitialStyle().tab]} key={name} onPress={() => this.props.goToPage(page)}>\n        <View>\n          <Text style={{color: isTabActive ? this.getTheme().tabTextColor : this.getTheme().tabTextColor, fontWeight: isTabActive ? 'bold' : 'normal', fontSize: this.getTheme().tabFontSize}}>{name}</Text>\n        </View>\n      </TouchableHighlight>\n    );\n  }\n\n  render() {\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      width: deviceWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: this.getTheme().tabTextColor,\n      bottom: 0,\n    };\n\n    var left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1], outputRange: [0, deviceWidth / numberOfTabs]\n    });\n\n    return (\n      <View style={this.getInitialStyle().tabs}>\n        {this.props.tabs.map((tab, i) => this.renderTabOption(tab, i))}\n        <Animated.View style={[tabUnderlineStyle, {left}]} />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}