{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/Widgets/Card.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport NativeBaseComponent from \"../Base/NativeBaseComponent\";\nimport computeProps from \"../../Utils/computeProps\";\n\nvar CardNB = function (_NativeBaseComponent) {\n  _inherits(CardNB, _NativeBaseComponent);\n\n  var _super = _createSuper(CardNB);\n\n  function CardNB() {\n    _classCallCheck(this, CardNB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CardNB, [{\n    key: \"getInitialStyle\",\n    value: function getInitialStyle() {\n      return {\n        card: {\n          marginVertical: 5,\n          flex: 1,\n          borderWidth: this.getTheme().borderWidth,\n          borderRadius: 2,\n          borderColor: this.getTheme().listBorderColor,\n          flexWrap: 'wrap',\n          borderBottomWidth: 0,\n          backgroundColor: this.props.transparent ? 'transparent' : this.getTheme().cardDefaultBg,\n          shadowColor: this.props.transparent ? undefined : '#000',\n          shadowOffset: this.props.transparent ? undefined : {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: this.props.transparent ? undefined : 0.1,\n          shadowRadius: this.props.transparent ? undefined : 1.5,\n          elevation: this.props.transparent ? undefined : 2\n        }\n      };\n    }\n  }, {\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var defaultProps = {\n        style: this.getInitialStyle().card\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var childrenArray = React.Children.map(this.props.children, function (child) {\n        return child;\n      });\n      return childrenArray;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.dataArray && this.props.renderRow) {\n        var ds = new ListView.DataSource({\n          rowHasChanged: function rowHasChanged(r1, r2) {\n            return r1 !== r2;\n          }\n        });\n        var dataSource = ds.cloneWithRows(this.props.dataArray);\n        return React.createElement(ListView, _extends({}, this.prepareRootProps(), {\n          enableEmptySections: true,\n          dataSource: dataSource,\n          renderRow: this.props.renderRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      return React.createElement(View, _extends({\n        ref: function ref(c) {\n          return _this._root = c;\n        }\n      }, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), this.renderChildren());\n    }\n  }]);\n\n  return CardNB;\n}(NativeBaseComponent);\n\nexport { CardNB as default };","map":{"version":3,"sources":["/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/Widgets/Card.js"],"names":["React","NativeBaseComponent","computeProps","CardNB","card","marginVertical","flex","borderWidth","getTheme","borderRadius","borderColor","listBorderColor","flexWrap","borderBottomWidth","backgroundColor","props","transparent","cardDefaultBg","shadowColor","undefined","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","defaultProps","style","getInitialStyle","childrenArray","Children","map","children","child","dataArray","renderRow","ds","ListView","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","prepareRootProps","c","_root","renderChildren"],"mappings":"AACA;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,mBAAP;AACA,OAAOC,YAAP;;IAEqBC,M;;;;;;;;;;;;;sCAMC;AACd,aAAO;AACHC,QAAAA,IAAI,EAAE;AACFC,UAAAA,cAAc,EAAE,CADd;AAEFC,UAAAA,IAAI,EAAE,CAFJ;AAGFC,UAAAA,WAAW,EAAE,KAAKC,QAAL,GAAgBD,WAH3B;AAIFE,UAAAA,YAAY,EAAE,CAJZ;AAKFC,UAAAA,WAAW,EAAE,KAAKF,QAAL,GAAgBG,eAL3B;AAMFC,UAAAA,QAAQ,EAAE,MANR;AAOFC,UAAAA,iBAAiB,EAAE,CAPjB;AAQFC,UAAAA,eAAe,EAAE,KAAKC,KAAL,CAAWC,WAAX,GAAwB,aAAxB,GAAwC,KAAKR,QAAL,GAAgBS,aARvE;AASFC,UAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,WAAX,GAAyBG,SAAzB,GAAqC,MAThD;AAUFC,UAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWC,WAAX,GAAyBG,SAAzB,GAAqC;AAACE,YAAAA,KAAK,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAVjD;AAWFC,UAAAA,aAAa,EAAE,KAAKR,KAAL,CAAWC,WAAX,GAAyBG,SAAzB,GAAqC,GAXlD;AAYFK,UAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWC,WAAX,GAAyBG,SAAzB,GAAqC,GAZjD;AAaFM,UAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWC,WAAX,GAAyBG,SAAzB,GAAqC;AAb9C;AADH,OAAP;AAiBH;;;uCAEkB;AAEf,UAAIO,YAAY,GAAG;AACfC,QAAAA,KAAK,EAAE,KAAKC,eAAL,GAAuBxB;AADf,OAAnB;AAIA,aAAOF,YAAY,CAAC,KAAKa,KAAN,EAAaW,YAAb,CAAnB;AAEH;;;qCAEgB;AACb,UAAIG,aAAa,GAAG7B,KAAK,CAAC8B,QAAN,CAAeC,GAAf,CAAmB,KAAKhB,KAAL,CAAWiB,QAA9B,EAAwC,UAACC,KAAD,EAAW;AACnE,eAAOA,KAAP;AACH,OAFmB,CAApB;AAIA,aAAOJ,aAAP;AACH;;;6BAEQ;AAAA;;AACL,UAAG,KAAKd,KAAL,CAAWmB,SAAX,IAAwB,KAAKnB,KAAL,CAAWoB,SAAtC,EAAiD;AAC7C,YAAMC,EAAE,GAAG,IAAIC,QAAQ,CAACC,UAAb,CAAwB;AAACC,UAAAA,aAAa,EAAE,uBAACC,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,KAAKC,EAAnB;AAAA;AAAhB,SAAxB,CAAX;AACA,YAAIC,UAAU,GAAGN,EAAE,CAACO,aAAH,CAAiB,KAAK5B,KAAL,CAAWmB,SAA5B,CAAjB;AACA,eACI,oBAAC,QAAD,eAAc,KAAKU,gBAAL,EAAd;AACI,UAAA,mBAAmB,EAAE,IADzB;AAEI,UAAA,UAAU,EAAEF,UAFhB;AAGI,UAAA,SAAS,EAAE,KAAK3B,KAAL,CAAWoB,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH;;AACD,aACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,aAAAU,CAAC;AAAA,iBAAI,KAAI,CAACC,KAAL,GAAaD,CAAjB;AAAA;AAAZ,SAAoC,KAAKD,gBAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACK,KAAKG,cAAL,EADL,CADJ;AAKH;;;;EA5D+B9C,mB;;SAAfE,M","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport {View, ListView} from 'react-native';\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\nimport computeProps from '../../Utils/computeProps';\n\nexport default class CardNB extends NativeBaseComponent {\n\n    propTypes: {\n        style : React.PropTypes.object\n    }\n\n    getInitialStyle() {\n        return {\n            card: {\n                marginVertical: 5,\n                flex: 1,\n                borderWidth: this.getTheme().borderWidth,\n                borderRadius: 2,\n                borderColor: this.getTheme().listBorderColor,\n                flexWrap: 'wrap',\n                borderBottomWidth: 0,\n                backgroundColor: this.props.transparent? 'transparent' : this.getTheme().cardDefaultBg,\n                shadowColor: this.props.transparent ? undefined : '#000',\n                shadowOffset: this.props.transparent ? undefined : {width: 0, height: 2},\n                shadowOpacity: this.props.transparent ? undefined : 0.1,\n                shadowRadius: this.props.transparent ? undefined : 1.5,\n                elevation: this.props.transparent ? undefined : 2\n            }\n        }\n    }\n\n    prepareRootProps() {\n\n        var defaultProps = {\n            style: this.getInitialStyle().card\n        };\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    renderChildren() {\n        var childrenArray = React.Children.map(this.props.children, (child) => {\n            return child;\n        });\n\n        return childrenArray;\n    }\n\n    render() {\n        if(this.props.dataArray && this.props.renderRow) {\n            const ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2});\n            var dataSource = ds.cloneWithRows(this.props.dataArray);\n            return (\n                <ListView {...this.prepareRootProps()}\n                    enableEmptySections={true}\n                    dataSource={dataSource}\n                    renderRow={this.props.renderRow} />\n            );\n        }\n        return(\n            <View ref={c => this._root = c} {...this.prepareRootProps()} >\n                {this.renderChildren()}\n            </View>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}