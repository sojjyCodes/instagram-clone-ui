{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/vendor/react-native-scrollable-tab-view/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport NativeBaseComponent from \"../../Base/NativeBaseComponent\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport DefaultTabBar from \"./DefaultTabBar\";\nvar deviceWidth = Dimensions.get('window').width;\n\nvar ScrollableTabView = function (_NativeBaseComponent) {\n  _inherits(ScrollableTabView, _NativeBaseComponent);\n\n  var _super = _createSuper(ScrollableTabView);\n\n  function ScrollableTabView(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollableTabView);\n\n    _this = _super.call(this, props);\n    var currentPage = _this.props.initialPage || 0;\n    _this.state = {\n      currentPage: currentPage,\n      scrollValue: new Animated.Value(currentPage)\n    };\n    return _this;\n  }\n\n  _createClass(ScrollableTabView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var release = function release(e, gestureState) {\n        var relativeGestureDistance = gestureState.dx / deviceWidth,\n            lastPageIndex = _this2.props.children.length - 1,\n            vx = gestureState.vx,\n            newPage = _this2.state.currentPage;\n\n        if (relativeGestureDistance < -0.5 || relativeGestureDistance < 0 && vx <= -0.5) {\n          newPage = newPage + 1;\n        } else if (relativeGestureDistance > 0.5 || relativeGestureDistance > 0 && vx >= 0.5) {\n          newPage = newPage - 1;\n        }\n\n        _this2.props.hasTouch && _this2.props.hasTouch(false);\n\n        _this2.goToPage(Math.max(0, Math.min(newPage, _this2.props.children.length - 1)));\n      };\n\n      this._panResponder = PanResponder.create({\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(e, gestureState) {\n          if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy)) {\n            if ((gestureState.moveX <= _this2.props.edgeHitWidth || gestureState.moveX >= deviceWidth - _this2.props.edgeHitWidth) && _this2.props.locked !== true) {\n              _this2.props.hasTouch && _this2.props.hasTouch(true);\n              return true;\n            }\n          }\n        },\n        onPanResponderRelease: release,\n        onPanResponderTerminate: release,\n        onPanResponderMove: function onPanResponderMove(e, gestureState) {\n          var dx = gestureState.dx;\n          var lastPageIndex = _this2.props.children.length - 1;\n          var offsetX = dx - _this2.state.currentPage * deviceWidth;\n\n          _this2.state.scrollValue.setValue(-1 * offsetX / deviceWidth);\n        }\n      });\n    }\n  }, {\n    key: \"goToPage\",\n    value: function goToPage(pageNumber) {\n      this.props.onChangeTab && this.props.onChangeTab({\n        i: pageNumber,\n        ref: this.props.children[pageNumber]\n      });\n      this.setState({\n        currentPage: pageNumber\n      });\n      Animated.spring(this.state.scrollValue, {\n        toValue: pageNumber,\n        friction: this.props.springFriction,\n        tension: this.props.springTension\n      }).start();\n    }\n  }, {\n    key: \"renderTabBar\",\n    value: function renderTabBar(props) {\n      if (this.props.renderTabBar === false) {\n        return null;\n      } else if (this.props.renderTabBar) {\n        return React.cloneElement(this.props.renderTabBar(), props);\n      } else {\n        return React.createElement(DefaultTabBar, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 14\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var sceneContainerStyle = {\n        width: deviceWidth * this.props.children.length,\n        flex: 1,\n        flexDirection: 'row'\n      };\n      var translateX = this.state.scrollValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, -deviceWidth]\n      });\n      var tabBarProps = {\n        goToPage: this.goToPage.bind(this),\n        tabs: this.props.children.map(function (child) {\n          return child.props.tabLabel;\n        }),\n        activeTab: this.state.currentPage,\n        scrollValue: this.state.scrollValue\n      };\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, this.props.tabBarPosition === 'top' ? this.renderTabBar(tabBarProps) : null, React.createElement(Animated.View, _extends({\n        style: [sceneContainerStyle, {\n          transform: [{\n            translateX: translateX\n          }]\n        }]\n      }, this._panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }), this.props.children), this.props.tabBarPosition === 'bottom' ? this.renderTabBar(tabBarProps) : null);\n    }\n  }]);\n\n  return ScrollableTabView;\n}(NativeBaseComponent);\n\nScrollableTabView.defaultProps = _objectSpread(_objectSpread({}, NativeBaseComponent.defaultProps), {}, {\n  tabBarPosition: 'top',\n  edgeHitWidth: 30,\n  springTension: 50,\n  springFriction: 10\n});\nexport { ScrollableTabView as default };","map":{"version":3,"sources":["/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/vendor/react-native-scrollable-tab-view/index.js"],"names":["React","NativeBaseComponent","DefaultTabBar","deviceWidth","Dimensions","get","width","ScrollableTabView","props","currentPage","initialPage","state","scrollValue","Animated","Value","release","e","gestureState","relativeGestureDistance","dx","lastPageIndex","children","length","vx","newPage","hasTouch","goToPage","Math","max","min","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","abs","dy","moveX","edgeHitWidth","locked","onPanResponderRelease","onPanResponderTerminate","onPanResponderMove","offsetX","setValue","pageNumber","onChangeTab","i","ref","setState","spring","toValue","friction","springFriction","tension","springTension","start","renderTabBar","cloneElement","sceneContainerStyle","flex","flexDirection","translateX","interpolate","inputRange","outputRange","tabBarProps","bind","tabs","map","child","tabLabel","activeTab","tabBarPosition","transform","panHandlers","defaultProps"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport {\n  Dimensions,\n  Text,\n  View,\n  TouchableOpacity,\n  PanResponder,\n  Animated,\n} from 'react-native';\n\nimport DefaultTabBar from './DefaultTabBar';\nvar deviceWidth = Dimensions.get('window').width;\n\nexport default class ScrollableTabView extends NativeBaseComponent {\n  static defaultProps = {\n    ...NativeBaseComponent.defaultProps,\n    tabBarPosition: 'top',\n    edgeHitWidth: 30,\n    springTension: 50,\n    springFriction: 10\n  };\n  constructor(props) {\n    super(props);\n    var currentPage = this.props.initialPage || 0;\n    this.state = {\n      currentPage: currentPage,\n      scrollValue: new Animated.Value(currentPage)\n    }\n  }\n\n  componentWillMount() {\n    var release = (e, gestureState) => {\n      var relativeGestureDistance = gestureState.dx / deviceWidth,\n          lastPageIndex = this.props.children.length - 1,\n          vx = gestureState.vx,\n          newPage = this.state.currentPage;\n\n      if (relativeGestureDistance < -0.5 || (relativeGestureDistance < 0 && vx <= -0.5)) {\n        newPage = newPage + 1;\n      } else if (relativeGestureDistance > 0.5 || (relativeGestureDistance > 0 && vx >= 0.5)) {\n        newPage = newPage - 1;\n      }\n\n      this.props.hasTouch && this.props.hasTouch(false);\n      this.goToPage(Math.max(0, Math.min(newPage, this.props.children.length - 1)));\n    }\n\n    this._panResponder = PanResponder.create({\n      // Claim responder if it's a horizontal pan\n      onMoveShouldSetPanResponder: (e, gestureState) => {\n        if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy)) {\n          if ((gestureState.moveX <= this.props.edgeHitWidth ||\n              gestureState.moveX >= deviceWidth - this.props.edgeHitWidth) &&\n                this.props.locked !== true) {\n            this.props.hasTouch && this.props.hasTouch(true);\n            return true;\n          }\n        }\n      },\n\n      // Touch is released, scroll to the one that you're closest to\n      onPanResponderRelease: release,\n      onPanResponderTerminate: release,\n\n      // Dragging, move the view with the touch\n      onPanResponderMove: (e, gestureState) => {\n        var dx = gestureState.dx;\n        var lastPageIndex = this.props.children.length - 1;\n\n        // This is awkward because when we are scrolling we are offsetting the underlying view\n        // to the left (-x)\n        var offsetX = dx - (this.state.currentPage * deviceWidth);\n        this.state.scrollValue.setValue(-1 * offsetX / deviceWidth);\n      },\n    });\n  }\n\n  goToPage(pageNumber) {\n    this.props.onChangeTab && this.props.onChangeTab({\n      i: pageNumber, ref: this.props.children[pageNumber]\n    });\n\n    this.setState({\n      currentPage: pageNumber\n    });\n\n    Animated.spring(this.state.scrollValue, {toValue: pageNumber, friction: this.props.springFriction, tension: this.props.springTension}).start();\n  }\n\n  renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(), props);\n    } else {\n      return <DefaultTabBar {...props} />;\n    }\n  }\n\n  render() {\n    var sceneContainerStyle = {\n      width: deviceWidth * this.props.children.length,\n      flex: 1,\n      flexDirection: 'row'\n    };\n\n    var translateX = this.state.scrollValue.interpolate({\n      inputRange: [0, 1], outputRange: [0, -deviceWidth]\n    });\n\n    var tabBarProps = {\n      goToPage: this.goToPage.bind(this),\n      tabs: this.props.children.map((child) => child.props.tabLabel),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue\n    };\n\n    return (\n      <View style={{flex: 1}}>\n        {this.props.tabBarPosition === 'top' ? this.renderTabBar(tabBarProps) : null}\n        <Animated.View style={[sceneContainerStyle, {transform: [{translateX}]}]}\n          {...this._panResponder.panHandlers}>\n          {this.props.children}\n        </Animated.View>\n        {this.props.tabBarPosition === 'bottom' ? this.renderTabBar(tabBarProps) : null}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}