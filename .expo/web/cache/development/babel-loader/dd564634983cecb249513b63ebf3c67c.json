{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/Widgets/CardSwiper.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport clamp from 'clamp';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport NativeBaseComponent from \"../Base/NativeBaseComponent\";\nimport View from \"./View\";\nvar SWIPE_THRESHOLD = 120;\n\nvar CardSwiper = function (_NativeBaseComponent) {\n  _inherits(CardSwiper, _NativeBaseComponent);\n\n  var _super = _createSuper(CardSwiper);\n\n  function CardSwiper(props) {\n    var _this;\n\n    _classCallCheck(this, CardSwiper);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pan: new Animated.ValueXY(),\n      enter: new Animated.Value(0.5)\n    };\n    return _this;\n  }\n\n  _createClass(CardSwiper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animateEntrance();\n    }\n  }, {\n    key: \"_animateEntrance\",\n    value: function _animateEntrance() {\n      Animated.spring(this.state.enter, {\n        toValue: 1,\n        friction: 8\n      }).start();\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this._panResponder = PanResponder.create({\n        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {\n          return true;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n          return true;\n        },\n        onPanResponderGrant: function onPanResponderGrant(e, gestureState) {\n          _this2.state.pan.setOffset({\n            x: _this2.state.pan.x._value,\n            y: _this2.state.pan.y._value\n          });\n\n          _this2.state.pan.setValue({\n            x: 0,\n            y: 0\n          });\n        },\n        onPanResponderMove: Animated.event([null, {\n          dx: this.state.pan.x,\n          dy: this.state.pan.y\n        }]),\n        onPanResponderRelease: function onPanResponderRelease(e, _ref) {\n          var vx = _ref.vx,\n              vy = _ref.vy;\n\n          _this2.state.pan.flattenOffset();\n\n          var velocity;\n\n          if (vx >= 0) {\n            velocity = clamp(vx, 3, 5);\n          } else if (vx < 0) {\n            velocity = clamp(vx * -1, 3, 5) * -1;\n          }\n\n          if (Math.abs(_this2.state.pan.x._value) > SWIPE_THRESHOLD) {\n            if (velocity > 0) {\n              _this2.props.onSwipeRight();\n            } else {\n              _this2.props.onSwipeLeft();\n            }\n\n            Animated.decay(_this2.state.pan, {\n              velocity: {\n                x: velocity,\n                y: vy\n              },\n              deceleration: 0.98\n            }).start(_this2._resetState.bind(_this2));\n          } else {\n            Animated.spring(_this2.state.pan, {\n              toValue: {\n                x: 0,\n                y: 0\n              },\n              friction: 4\n            }).start();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_resetState\",\n    value: function _resetState() {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n      this.state.enter.setValue(0);\n\n      this._animateEntrance();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          pan = _this$state.pan,\n          enter = _this$state.enter;\n      var _ref2 = [pan.x, pan.y],\n          translateX = _ref2[0],\n          translateY = _ref2[1];\n      var rotate = pan.x.interpolate({\n        inputRange: [-300, 0, 300],\n        outputRange: ['-30deg', '0deg', '30deg']\n      });\n      var opacity = pan.x.interpolate({\n        inputRange: [-150, 0, 150],\n        outputRange: [0.5, 1, 0.5]\n      });\n      var scale = enter;\n      var animatedCardStyles = {\n        transform: [{\n          translateX: translateX\n        }, {\n          translateY: translateY\n        }, {\n          rotate: rotate\n        }, {\n          scale: scale\n        }],\n        opacity: opacity\n      };\n      return React.createElement(View, {\n        ref: function ref(c) {\n          return _this3._root = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.View, _extends({\n        style: animatedCardStyles\n      }, this._panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), this.props.children));\n    }\n  }]);\n\n  return CardSwiper;\n}(NativeBaseComponent);\n\nexport { CardSwiper as default };","map":{"version":3,"sources":["/home/ebenezer/Project/Mobile Dev/instagram-clone-ui/node_modules/react-native-base/Components/Widgets/CardSwiper.js"],"names":["React","clamp","NativeBaseComponent","View","SWIPE_THRESHOLD","CardSwiper","props","state","pan","Animated","ValueXY","enter","Value","_animateEntrance","spring","toValue","friction","start","_panResponder","PanResponder","create","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderGrant","e","gestureState","setOffset","x","_value","y","setValue","onPanResponderMove","event","dx","dy","onPanResponderRelease","vx","vy","flattenOffset","velocity","Math","abs","onSwipeRight","onSwipeLeft","decay","deceleration","_resetState","bind","translateX","translateY","rotate","interpolate","inputRange","outputRange","opacity","scale","animatedCardStyles","transform","c","_root","panHandlers","children"],"mappings":"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","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport clamp from 'clamp';\nimport {Animated, PanResponder} from 'react-native';\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\nimport View from './View';\n\n\nvar SWIPE_THRESHOLD = 120;\n\nexport default class CardSwiper extends NativeBaseComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pan: new Animated.ValueXY(),\n            enter: new Animated.Value(0.5)\n        }\n    }\n\n    componentDidMount() {\n        this._animateEntrance();\n    }\n\n    _animateEntrance() {\n        Animated.spring(\n            this.state.enter,\n            { toValue: 1, friction: 8 }\n        ).start();\n    }\n\n    componentWillMount() {\n        this._panResponder = PanResponder.create({\n            onMoveShouldSetResponderCapture: () => true,\n            onMoveShouldSetPanResponderCapture: () => true,\n\n            onPanResponderGrant: (e, gestureState) => {\n                this.state.pan.setOffset({x: this.state.pan.x._value, y: this.state.pan.y._value});\n                this.state.pan.setValue({x: 0, y: 0});\n            },\n\n            onPanResponderMove: Animated.event([\n                null, {dx: this.state.pan.x, dy: this.state.pan.y},\n            ]),\n\n            onPanResponderRelease: (e, {vx, vy}) => {\n                this.state.pan.flattenOffset();\n                var velocity;\n\n                if (vx >= 0) {\n                    velocity = clamp(vx, 3, 5);\n                } else if (vx < 0) {\n                    velocity = clamp(vx * -1, 3, 5) * -1;\n                }\n\n                if (Math.abs(this.state.pan.x._value) > SWIPE_THRESHOLD) {\n                    if (velocity>0) {\n                        this.props.onSwipeRight();\n                    } else {\n                        this.props.onSwipeLeft();\n                    }\n                    Animated.decay(this.state.pan, {\n                        velocity: {x: velocity, y: vy},\n                        deceleration: 0.98\n                    }).start(this._resetState.bind(this))\n                } else {\n                    Animated.spring(this.state.pan, {\n                        toValue: {x: 0, y: 0},\n                        friction: 4\n                    }).start()\n                }\n            }\n        })\n    }\n\n    _resetState() {\n        this.state.pan.setValue({x: 0, y: 0});\n        this.state.enter.setValue(0);\n        this._animateEntrance();\n    }\n\n    render() {\n\n        let { pan, enter, } = this.state;\n\n        let [translateX, translateY] = [pan.x, pan.y];\n\n        let rotate = pan.x.interpolate({inputRange: [-300, 0, 300], outputRange: ['-30deg', '0deg', '30deg']});\n        let opacity = pan.x.interpolate({inputRange: [-150, 0, 150], outputRange: [0.5, 1, 0.5]})\n        let scale = enter;\n\n        let animatedCardStyles = {transform: [{translateX}, {translateY}, {rotate}, {scale}], opacity};\n\n\n\n        return(\n            <View ref={c => this._root = c}>\n                <Animated.View style={ animatedCardStyles } {...this._panResponder.panHandlers} >\n                {this.props.children}\n                </Animated.View>\n            </View>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}